import discord
from discord.ext import commands
from discord import app_commands
import json
import os
import random
from datetime import datetime

# –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Ö–∏—Å—Ç–∏—Ç–∏ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó)
import os
TOKEN = os.getenv("DISCORD_TOKEN")
LOG_CHANNEL_ID = 1299805349808836618  # –õ–æ–≥-–∫–∞–Ω–∞–ª (–¥–ª—è —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å)
MODERATOR_ROLE = "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"
DATA_FILE = "mod_data.json"

WELCOME_CHANNEL_ID = 1359540425429487627
LEAVE_CHANNEL_ID = 1359652835045937303

intents = discord.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

join_times = {}

if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "r") as f:
        data = json.load(f)
else:
    data = {}


def save():
    with open(DATA_FILE, "w") as f:
        json.dump(data, f, indent=4)


def is_mod(member):
    return any(role.name == MODERATOR_ROLE for role in member.roles)


async def dm(member, text):
    try:
        await member.send(text)
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ DM –¥–æ {member}: {e}")


async def log_to_channel(guild, text):
    channel = guild.get_channel(LOG_CHANNEL_ID)
    if channel:
        await channel.send(text)


@bot.event
async def on_ready():
    await tree.sync()
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω–æ —Ç–∞ slash-–∫–æ–º–∞–Ω–¥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ")


@bot.event
async def on_member_join(member):
    guild = member.guild
    welcome_channel = guild.get_channel(WELCOME_CHANNEL_ID)
    embed = discord.Embed(
        title="üëã –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫!",
        description=
        (f"–í—ñ—Ç–∞—î–º–æ {member.mention} –≤ –Ω–∞—à–æ–º—É –∫–ª–∞–Ω—ñ! "
         f"–©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –ø—Ä–∏–π–º–∞—Ç–∏ —É—á–∞—Å—Ç—å –æ–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω—É <#1297650987606999181>.\n"
         f"–û–∑–Ω–∞–π–æ–º–∏–ª–∏—Å—å? –¢–µ–ø–µ—Ä –ø–æ–¥–∞–π—Ç–µ –Ω–∞ —Ä–æ–ª—å <#1267076896789762140>.\n\n"
         f"–ü—Ä–∏–∫–ª–∞–¥:\n"
         f"–°—Ç–∞–Ω—ñ—Å–ª–∞–≤ –§–ª—ñ–±—é—Å—Ç–µ—Ä (–Ω—ñ–∫)\n"
         f"1347 (—ñ–¥)\n"
         f"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–Ω–¥—Ä (—Ç–æ–π —Ö—Ç–æ –≤–∞—Å –∑–∞–ø—Ä–æ—Å–∏–≤)**!"),
        color=random.randint(0, 0xFFFFFF))
    if welcome_channel:
        await welcome_channel.send(embed=embed)
    await dm(
        member, f"–í—ñ—Ç–∞—î–º–æ {member.mention} –≤ –Ω–∞—à–æ–º—É –∫–ª–∞–Ω—ñ! "
        f"–©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –ø—Ä–∏–π–º–∞—Ç–∏ —É—á–∞—Å—Ç—å –æ–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω—É <#1297650987606999181>.\n"
        f"–û–∑–Ω–∞–π–æ–º–∏–ª–∏—Å—å? –¢–µ–ø–µ—Ä –ø–æ–¥–∞–π—Ç–µ –Ω–∞ —Ä–æ–ª—å <#1267076896789762140>.\n\n"
        f"–ü—Ä–∏–∫–ª–∞–¥:\n"
        f"–°—Ç–∞–Ω—ñ—Å–ª–∞–≤ –§–ª—ñ–±—é—Å—Ç–µ—Ä (–Ω—ñ–∫)\n"
        f"1347 (—ñ–¥)\n"
        f"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–Ω–¥—Ä (—Ç–æ–π —Ö—Ç–æ –≤–∞—Å –∑–∞–ø—Ä–æ—Å–∏–≤)**!")
    join_times[member.id] = datetime.utcnow()


@bot.event
async def on_member_remove(member):
    guild = member.guild
    leave_channel = guild.get_channel(LEAVE_CHANNEL_ID)
    join_time = join_times.pop(member.id, None)
    time_spent = "–Ω–µ–≤—ñ–¥–æ–º–æ"
    if join_time:
        time_spent = str(datetime.utcnow() - join_time).split('.')[0]
    # –¢–µ–ø–µ—Ä –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è member.mention –¥–ª—è —Ç–µ–≥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    msg = f"üëã {member.mention} –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä. –ü—Ä–æ–≤—ñ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ: {time_spent}"
    if leave_channel:
        await leave_channel.send(msg)


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    await bot.process_commands(message)


@tree.command(
    name="announce",
    description="–†–æ–∑—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –æ—Å–æ–±–∏—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫–∞–º –∑ –¥–æ 5 —Ä–æ–ª–µ–π")
@app_commands.describe(message="–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è",
                       role1="–†–æ–ª—å 1",
                       role2="–†–æ–ª—å 2",
                       role3="–†–æ–ª—å 3",
                       role4="–†–æ–ª—å 4",
                       role5="–†–æ–ª—å 5")
async def announce(interaction: discord.Interaction,
                   message: str,
                   role1: discord.Role = None,
                   role2: discord.Role = None,
                   role3: discord.Role = None,
                   role4: discord.Role = None,
                   role5: discord.Role = None):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)

    roles = [role for role in [role1, role2, role3, role4, role5] if role]
    if not roles:
        return await interaction.response.send_message(
            "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –∂–æ–¥–Ω–æ—ó —Ä–æ–ª—ñ.", ephemeral=True)

    sent_count = 0
    failed_count = 0
    members_sent = set()

    for role in roles:
        for member in role.members:
            if member.bot or member in members_sent:
                continue
            try:
                await member.send(f"üì¢ **–û–≥–æ–ª–æ—à–µ–Ω–Ω—è:** {message}")
                sent_count += 1
                members_sent.add(member)
            except discord.Forbidden:
                failed_count += 1
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –¥–æ {member}: {e}")
                failed_count += 1

    await interaction.response.send_message(
        f"‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ä–æ–∑—ñ—Å–ª–∞–Ω–æ.\nüì® –£—Å–ø—ñ—à–Ω–æ: {sent_count}\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è: {failed_count}",
        ephemeral=True)


@tree.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç–∏ —É—á–∞—Å–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def ban(interaction: discord.Interaction,
              member: discord.Member,
              reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await member.ban(reason=reason)
    await dm(member, f"‚ùå –¢–µ–±–µ –∑–∞–±–∞–Ω–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await log_to_channel(interaction.guild,
                         f"{member.mention} –±—É–≤ –∑–∞–±–∞–Ω–µ–Ω–∏–π. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message("‚úÖ –£—á–∞—Å–Ω–∏–∫–∞ –∑–∞–±–∞–Ω–µ–Ω–æ.",
                                            ephemeral=True)


@tree.command(name="mute", description="–ó–∞–º'—é—Ç–∏—Ç–∏ —É—á–∞—Å–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def mute(interaction: discord.Interaction,
               member: discord.Member,
               reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    muted_role = discord.utils.get(interaction.guild.roles, name="Muted")
    if not muted_role:
        muted_role = await interaction.guild.create_role(name="Muted")
        for channel in interaction.guild.channels:
            await channel.set_permissions(muted_role,
                                          speak=False,
                                          send_messages=False)
    await member.add_roles(muted_role)
    await dm(member, f"üîá –¢–µ–±–µ –∑–∞–º'—é—Ç–∏–ª–∏. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await log_to_channel(
        interaction.guild,
        f"{member.mention} –±—É–≤ –∑–∞–º'—é—á–µ–Ω–∏–π. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message("‚úÖ –£—á–∞—Å–Ω–∏–∫–∞ –∑–∞–º'—é—á–µ–Ω–æ.",
                                            ephemeral=True)


@tree.command(name="warn", description="–í–∏–¥–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def warn(interaction: discord.Interaction,
               member: discord.Member,
               reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    uid = str(member.id)
    data.setdefault(uid, {"warn": 0, "reprimand": 0})
    data[uid]["warn"] += 1
    await dm(member, f"‚ö†Ô∏è –¢–∏ –æ—Ç—Ä–∏–º–∞–≤ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await log_to_channel(
        interaction.guild,
        f"{member.mention} –æ—Ç—Ä–∏–º–∞–≤ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    if data[uid]["warn"] >= 2:
        data[uid]["warn"] = 0
        data[uid]["reprimand"] += 1
        await dm(member, "‚õîÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –¥–æ–≥–∞–Ω–∞ –∑–∞ 2 –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è.")
        await log_to_channel(
            interaction.guild,
            f"{member.mention} –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç—Ä–∏–º–∞–≤ –¥–æ–≥–∞–Ω—É –∑–∞ 2 –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è.")
    if data[uid]["reprimand"] >= 3:
        await dm(member, "‚ùå –¢–µ–±–µ –≤–∏–≥–Ω–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ 3 –¥–æ–≥–∞–Ω–∏.")
        await log_to_channel(
            interaction.guild,
            f"{member.mention} –≤–∏–≥–Ω–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ 3 –¥–æ–≥–∞–Ω–∏.")
        await member.kick(reason="3 –¥–æ–≥–∞–Ω–∏")
        data.pop(uid)
    save()
    await interaction.followup.send("‚úÖ –ì–æ—Ç–æ–≤–æ.", ephemeral=True)


@tree.command(name="reprimand", description="–í–∏–¥–∞—Ç–∏ –¥–æ–≥–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def reprimand(interaction: discord.Interaction,
                    member: discord.Member,
                    reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    uid = str(member.id)
    data.setdefault(uid, {"warn": 0, "reprimand": 0})
    data[uid]["reprimand"] += 1
    await dm(member, f"‚õîÔ∏è –¢–∏ –æ—Ç—Ä–∏–º–∞–≤ –¥–æ–≥–∞–Ω—É. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await log_to_channel(
        interaction.guild,
        f"{member.mention} –æ—Ç—Ä–∏–º–∞–≤ –¥–æ–≥–∞–Ω—É. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    if data[uid]["reprimand"] >= 3:
        await dm(member, "‚ùå –¢–µ–±–µ –≤–∏–≥–Ω–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ 3 –¥–æ–≥–∞–Ω–∏.")
        await log_to_channel(
            interaction.guild,
            f"{member.mention} –≤–∏–≥–Ω–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ 3 –¥–æ–≥–∞–Ω–∏.")
        await member.kick(reason="3 –¥–æ–≥–∞–Ω–∏")
        data.pop(uid)
    save()
    await interaction.followup.send("‚úÖ –ì–æ—Ç–æ–≤–æ.", ephemeral=True)


@tree.command(name="removewarn", description="–ó–Ω—è—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –∑ —É—á–∞—Å–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def removewarn(interaction: discord.Interaction,
                     member: discord.Member,
                     reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    uid = str(member.id)
    if uid in data and data[uid]["warn"] > 0:
        data[uid]["warn"] -= 1
        await dm(member, f"‚úÖ –ó –≤–∞—Å –∑–Ω—è—Ç–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_to_channel(
            interaction.guild,
            f"{member.mention} ‚Äî –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –∑–Ω—è—Ç–æ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        save()
        await interaction.followup.send("‚úÖ –ì–æ—Ç–æ–≤–æ.", ephemeral=True)
    else:
        await interaction.followup.send("‚ùå –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å.",
                                        ephemeral=True)


@tree.command(name="removereprimand", description="–ó–Ω—è—Ç–∏ –¥–æ–≥–∞–Ω—É –∑ —É—á–∞—Å–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def removereprimand(interaction: discord.Interaction,
                          member: discord.Member,
                          reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏"):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    uid = str(member.id)
    if uid in data and data[uid]["reprimand"] > 0:
        data[uid]["reprimand"] -= 1
        await dm(member, f"‚úÖ –ó –≤–∞—Å –∑–Ω—è—Ç–æ –¥–æ–≥–∞–Ω—É. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_to_channel(
            interaction.guild,
            f"{member.mention} ‚Äî –¥–æ–≥–∞–Ω–∞ –∑–Ω—è—Ç–∞. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        save()
        await interaction.followup.send("‚úÖ –ì–æ—Ç–æ–≤–æ.", ephemeral=True)
    else:
        await interaction.followup.send("‚ùå –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –¥–æ–≥–∞–Ω.",
                                        ephemeral=True)


@tree.command(name="reset", description="–û–±–Ω—É–ª–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å —É—á–∞—Å–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å–Ω–∏–∫")
async def reset(interaction: discord.Interaction, member: discord.Member):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    uid = str(member.id)
    data[uid] = {"warn": 0, "reprimand": 0}
    await dm(member, "‚ö†Ô∏è –í—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —Ç–∞ –¥–æ–≥–∞–Ω–∏ –±—É–ª–æ –æ–±–Ω—É–ª–µ–Ω–æ.")
    await log_to_channel(interaction.guild,
                         f"{member.mention} ‚Äî —Å—Ç–∞—Ç—É—Å –æ–±–Ω—É–ª–µ–Ω–æ.")
    save()
    await interaction.followup.send("‚úÖ –ì–æ—Ç–æ–≤–æ.", ephemeral=True)


@tree.command(
    name="listpunishments",
    description="–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è–º–∏ —Ç–∞ –¥–æ–≥–∞–Ω–∞–º–∏")
async def listpunishments(interaction: discord.Interaction):
    if not is_mod(interaction.user):
        return await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤",
                                                       ephemeral=True)
    await interaction.response.defer(thinking=False, ephemeral=True)
    if not data:
        await log_to_channel(
            interaction.guild,
            "‚úÖ –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è–º–∏ –∞–±–æ –¥–æ–≥–∞–Ω–∞–º–∏.")
        return await interaction.followup.send("‚úÖ –ù–µ–º–∞—î –∑–∞–ø–∏—Å—ñ–≤.",
                                               ephemeral=True)
    result = ""
    for uid, record in data.items():
        warn = record.get("warn", 0)
        reprimand = record.get("reprimand", 0)
        if warn > 0 or reprimand > 0:
            member = interaction.guild.get_member(int(uid))
            name = member.mention if member else f"`{uid}`"
            result += f"{name}: ‚ö†Ô∏è {warn} –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å, ‚õî {reprimand} –¥–æ–≥–∞–Ω\n"
    if result:
        await log_to_channel(interaction.guild,
                             "üìã –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–æ—Ä—É—à–µ–Ω–Ω—è–º–∏:\n" + result)
        await interaction.followup.send("üì® –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª.",
                                        ephemeral=True)
    else:
        await log_to_channel(
            interaction.guild,
            "‚úÖ –£ –∂–æ–¥–Ω–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞ –Ω–µ–º–∞—î –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –∞–±–æ –¥–æ–≥–∞–Ω.")
        await interaction.followup.send("‚úÖ –£—Å—ñ —á–∏—Å—Ç—ñ.", ephemeral=True)


bot.run(TOKEN)
